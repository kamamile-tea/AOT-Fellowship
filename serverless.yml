service: aot-fellowship-demo

provider:
  name: aws
  runtime: nodejs14.x
  profile: default # Update this with your own profile if necessary. See https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html for more info
  environment:
    SHOWTIME_TABLE: ${self:custom.showtimeTableName}

custom:
  showtimeTableName: "aot_showtime"
  dynamodb:
    start:
      migrate: true
    stages:
      - dev

functions:
  showtime:
    handler: src/handler.showtime
    role: aotLambdaRole
    events:
      - http:
          path: createShowtime
          method: post
          cors: true
          private: false
      - http:
          path: getShowtime
          method: get
          cors: true
          private: false
          request:
            parameters:
              querystrings:
                title: true
      - http:
          path: getAllShowtimes
          method: get
          cors: true
          private: false

resources:
  Resources:
    AotShowtimeTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: title
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.showtimeTableName}
        GlobalSecondaryIndexes:
          - IndexName: titleIndex
            KeySchema:
              - AttributeName: title
                KeyType: HASH
            Projection:
              ProjectionType: "ALL"
    aotLambdaRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: aotLambdaPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogStream
                    - logs:CreateLogGroup
                  Resource:
                    - "Fn::Join":
                        - ":"
                        - - "arn:aws:logs"
                          - Ref: "AWS::Region"
                          - Ref: "AWS::AccountId"
                          - "log-group:/aws/lambda/aot-fellowship-demo-dev*:*"
                - Effect: Allow
                  Action:
                    - logs:PutLogEvents
                  Resource:
                    - "Fn::Join":
                        - ":"
                        - - "arn:aws:logs"
                          - Ref: "AWS::Region"
                          - Ref: "AWS::AccountId"
                          - "log-group:/aws/lambda/aot-fellowship-demo-dev*:*:*"
                - Effect: Allow
                  Action:
                    - "dynamodb:*"
                  Resource: "*"

plugins:
  - serverless-offline
  - serverless-dynamodb-local
